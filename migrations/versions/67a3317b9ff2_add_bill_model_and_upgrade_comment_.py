"""Add Bill model and upgrade Comment model for Bill support

Revision ID: 67a3317b9ff2
Revises: 1065b805891c
Create Date: 2025-09-01 13:10:03.401576

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '67a3317b9ff2'
down_revision = '1065b805891c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if bills table exists, if not create it
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    if 'bills' not in inspector.get_table_names():
        op.create_table('bills',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('bill_number', sa.String(length=20), nullable=False),
            sa.Column('title', sa.String(length=500), nullable=False),
            sa.Column('content', sa.Text(), nullable=True),
            sa.Column('chamber', sa.String(length=10), nullable=False),
            sa.Column('status', sa.String(length=50), nullable=True),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('updated_at', sa.DateTime(), nullable=True),
            sa.Column('last_scraped', sa.DateTime(), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('bill_number')
        )
        op.create_index(op.f('ix_bills_bill_number'), 'bills', ['bill_number'], unique=True)
    
    # Check if bill_id column exists in comments table
    columns = [col["name"] for col in inspector.get_columns("comments")]
    if 'bill_id' not in columns:
        with op.batch_alter_table('comments', schema=None) as batch_op:
            batch_op.add_column(sa.Column('bill_id', sa.Integer(), nullable=True))
            batch_op.alter_column('post_id',
                   existing_type=sa.INTEGER(),
                   nullable=True)
            batch_op.create_foreign_key('fk_comments_bill_id_bills', 'bills', ['bill_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if bill_id column exists before trying to remove it
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    columns = [col["name"] for col in inspector.get_columns("comments")]
    
    if 'bill_id' in columns:
        with op.batch_alter_table('comments', schema=None) as batch_op:
            # Drop foreign key constraint first
            try:
                batch_op.drop_constraint('fk_comments_bill_id_bills', type_='foreignkey')
            except:
                pass  # Constraint might not exist or have different name
            batch_op.alter_column('post_id',
                   existing_type=sa.INTEGER(),
                   nullable=False)
            batch_op.drop_column('bill_id')

    # ### end Alembic commands ###
