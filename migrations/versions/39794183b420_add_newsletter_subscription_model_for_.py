"""Add newsletter subscription model for guests

Revision ID: 39794183b420
Revises: add_bio_fields_to_users
Create Date: 2025-09-03 11:38:50.993514

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '39794183b420'
down_revision = 'add_bio_fields_to_users'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if bill_splinters table exists before trying to drop it
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    if 'bill_splinters' in inspector.get_table_names():
        # Check if the index exists before trying to drop it
        indexes = inspector.get_indexes('bill_splinters')
        index_names = [idx['name'] for idx in indexes]
        
        if 'ix_bill_splinters_bill_id' in index_names:
            with op.batch_alter_table('bill_splinters', schema=None) as batch_op:
                batch_op.drop_index(batch_op.f('ix_bill_splinters_bill_id'))
        
        op.drop_table('bill_splinters')
    
    # Create newsletter_subscriptions table
    op.create_table('newsletter_subscriptions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('subscribed_at', sa.DateTime(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('unsubscribe_token', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('unsubscribe_token')
    )
    with op.batch_alter_table('newsletter_subscriptions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_newsletter_subscriptions_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_newsletter_subscriptions_unsubscribe_token'), ['unsubscribe_token'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop newsletter_subscriptions table
    op.drop_table('newsletter_subscriptions')
    
    # Recreate bill_splinters table (if needed for rollback)
    op.create_table('bill_splinters',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('bill_id', sa.INTEGER(), nullable=False),
    sa.Column('quote_text', sa.TEXT(), nullable=False),
    sa.Column('quote_html', sa.TEXT(), nullable=True),
    sa.Column('selector_json', sqlite.JSON(), nullable=True),
    sa.Column('label', sa.VARCHAR(length=32), nullable=False),
    sa.Column('summary', sa.VARCHAR(length=280), nullable=False),
    sa.Column('body', sa.TEXT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=16), nullable=False),
    sa.Column('author_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.id'], name=op.f('fk_bill_splinters_bill_id_bills')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bill_splinters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bill_splinters_bill_id'), ['bill_id'], unique=False)

    # ### end Alembic commands ###
